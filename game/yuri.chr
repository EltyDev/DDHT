Si vous avez découvert ce mot dans une petite boite en bois avec un cœur dessus, et bien *félicitations !* Vous êtes probablement la première personne à le lire. Je n’avais pas vraiment prévu de le partager avec qui que ce soit mais, d’une certaine façon, le simple fait qu’une personne quelconque, qu’un parfait inconnu tombe sur ce mot et lise mon histoire, est particulièrement palpitant. Nous ne nous rencontrerons jamais, mais nous partagerons ensemble quelque chose de spécial. Je suis fascinée à l’idée que l’un de nous deux meure, dans un futur lointain ou tout simplement demain, mais que l’autre soit dans l’ignorance la plus totale. Vous savez, ma vie entière tient dans cette expression : tant que votre mémoire gardera une trace de ma présence, je serai là. En écrivant ceci, je me demande si vous êtes fasciné ou si vous vous sentez violé. C’est palpitant. 
Je suis désolée si mon récit est quelque peu désorganisé, mais j’aimerais le mettre sur papier tant qu’il est encore clair dans ma tête. Dans un premier temps, laissez-moi vous parler un petit peu de moi. Je suis une étudiante qui vient d’entrer à l’université et ai vécu, selon toute vraisemblance, une vie banale jusqu’à présent. J’ai grandi dans un secteur scolaire aisé avec des professeurs compétents. J’ai rejoint le club d’athlétisme au collège et un peu au lycée, et j’ai eu deux petits copains. Aujourd’hui, je poursuis une carrière dans l’ergothérapie, parce que j’ai l’impression que c’est un domaine sous-évalué et qui fournit un soutien considérable aux gens qui en ont besoin.
Je vous donne ces informations parce qu’il existe cette étrange idée fausse que si vous souhaitez tuer quelqu’un, soit vous êtes taré dans votre tête, soit vous avez des difficultés à contrôler votre colère. Mais il est évident que je n’entre dans ni l’une ni l’autre de ces catégories. Certes, la plupart des affaires de meurtre ont lieu dans l’environnement domestique, où un individu perd son sang-froid ou un truc dans le genre. Mais, en réalité, ces individus tuent suite à une provocation, que ce soit une crise singulière ou une série de malheurs dévastatrice. Ces individus tuent parce qu’à un instant précis, ils souhaitent qu’une personne en particulier, pour une raison en particulier, souffre ou meure. 
Je parle bien ici de la volonté de tuer quelqu’un sans raison particulière, seulement pour voir ce que ça fait. Avez-vous déjà ressenti cela ? Je ne voudrais pas savoir ce que les autres pensent, parce qu’au fond, je n’en ai jamais parlé à quiconque. Mais depuis ma plus tendre enfance, je me suis toujours demandé ce que ça faisait de tuer quelqu’un. Pas quelqu’un en particulier, juste une personne au hasard. J’ai toujours été fascinée par l’idée qu’en m’y consacrant réellement, je pourrais approcher quelqu’un, et le supprimer de la surface du globe en moins de cinq minutes.
Mais je ne l’ai jamais fait, et ce pour plusieurs raisons : tout d’abord, pendant très longtemps, il m’était impossible, sur le plan logistique, de passer à l’acte sans me faire prendre. Je n’ai eu mon permis de conduire que quelques années auparavant, mais, même en sa possession, les préparatifs demandaient beaucoup trop de temps, ce qui aurait éveillé les soupçons. Ce n’est qu’en entrant à l’université que je me suis rendu compte que ce n’était plus vraiment un obstacle. 
Et puis, j’avais peur de faire souffrir trop de personnes. Vous avez peut-être ri en lisant cela, ri de l’hypocrisie qui se dégage de cette phrase. Mais laissez-moi vous expliquer : pourquoi devrais-je culpabiliser à l’idée de tuer quelqu’un, si la personne en question n’était plus en état de se préoccuper de quoi que ce soit ? Pour qui devrais-je culpabiliser ? Au contraire, je ne souhaiterais pas être responsable du chagrin des vivants. À cause de cela, je savais qu’il me faudrait chercher longtemps avant de trouver la personne idéale à tuer, et je n’ai jamais eu les moyens de le faire – du moins, encore une fois, avant que je n’entre à l’université. 
Et à présent, après avoir vécu l’expérience, je dirai que je suis plutôt satisfaite, en fin de compte. Est-ce que je le referai à nouveau ? J’en doute, puisque ma curiosité a déjà été assouvie. Une seconde tentative ne me procurerait pas les mêmes émotions.
Quoi qu’il en soit, si, par hasard, vous êtes également curieux de savoir ce que ça fait de tuer quelqu’un, libre à vous de prendre des notes. :) 
***
J’ai pris l’habitude d’observer les gens peu de temps après être entrée au collège. Cette activité est intéressante pour moi parce qu'il suffit de se focaliser sur un détail de leur vie pour les transformer en personnages, sans qu’ils ne s’en rendent compte, bien sûr. C’est tellement simple d’oublier qu’un individu sur cent a une biographie aussi profonde et complexe que la tienne. J’ai aussi remarqué une chose concernant l’activité d’observer les gens et de vouloir tuer quelqu’un : c’est que l’on en est de plus en plus conscient. À chaque fois que je trouve une nouvelle personne à observer, son histoire prend forme tout doucement au fil du temps, et les zones d’ombre finissent par être révélées. C’est génial, vraiment.
J’allais régulièrement chez plusieurs épiciers en fin de semaine et regardais dans les caddies des clients. Si je voyais quelque chose qui m’intéressait, je décidais d’observer ce dernier un peu plus longtemps. Bien entendu, puisque mon objectif était de trouver quelqu’un à tuer, j’ignorais tous ceux qui avaient des enfants ou un(e) conjoint(e). La présence, ou non, d’une alliance était également un signe à prendre en compte. 
Peut-être une fois par semaine, je trouvais quelqu’un qui répondait à mes exigences, et m’empressais de le suivre jusqu’à son domicile pour connaitre son adresse. À ce stade-là, il devenait incroyablement facile d’enquêter un peu plus à son sujet : la plupart des gens ont des horaires de travail réguliers, ce qui signifie que je pouvais passer les après-midis à parcourir leur courrier ou faire un tour dans leur maison. Je répétais cela avec plusieurs personnes (et je l'ai échappé belle une fois), mais pour diverses raisons, aucun ne me satisfaisait pleinement au point de le tuer. 
Je commençais à perdre patience et pensais qu’un homme nommé Devon ferait l’affaire, même si je n’avais pas vraiment envie de tuer quelqu’un de riche. Puis… je rencontrai une nouvelle personne, une personne qui me paraissait en tout point parfaite pour l’expérience. Alors que j’enquêtais davantage sur elle, la sensation se manifesta, encore plus forte : je sus qu’elle était la bonne et que je la tuerais. 
C’était une jeune femme que j’avais rencontrée dans une épicerie, comme à l’habitude. Elle effectuait quelques achats avec un panier. Sa chevelure était ondulée et marron foncé, reposant maladroitement sur ses épaules affaissés et de chaque côté de son visage fatigué. Ses doigts nus m’indiquèrent qu’elle devait être célibataire, mais au-delà de ça, mon instinct me le confirmait. Cette femme était… banale, il n’y a pas d’autres mots. Je crois que j’ai développé une meilleure perception des vies personnelles des gens depuis que j’ai commencé à les observer. À voir sa façon de se tenir, j’eus l’intime conviction que si elle venait à mourir, elle ne manquerait à personne. Mais bien sûr, je voulais encore un peu enquêter sur elle.
Je continuai ma routine habituelle qui consistait à explorer son domicile pendant ses heures de travail. J’appris très rapidement, grâce à son courrier, qu’elle s’appelait Linda Watson. Linda vivait dans un immeuble calme, sa boite aux lettres était facilement accessible et juste à coté de sa porte. Au lieu de jeter un rapide coup d’œil à son courrier, je décidai de le ramener chez moi, en prenant soin de le redéposer dans sa boite aux lettres avant qu’elle ne rentre (elle habitait seulement à 15 minutes de chez moi). J’effectuai quelques recherches et appris comment ouvrir et recacheter des enveloppes sans les endommager, ce qui nécessita un peu d’entrainement, un sèche-cheveux, de l’alcool isopropylique et des cotons-tiges.
Ainsi, j’en découvris facilement un peu plus sur elle. Linda avait 33 ans et travaillait pour un petit cabinet d’expertise-comptable (je ne devrais pas donner son nom tout de suite). Elle était née un 11 décembre, une date qui, par coïncidence, se rapprochait dangereusement. Je parvins également à trouver son relevé bancaire, ce qui me donna un bel aperçu de la façon dont elle avait passé le mois dernier. Je compris alors que mon analyse de Linda Watson, une femme particulièrement banale, était juste, parce qu’il n’y avait absolument rien d’intéressant sur cette liste : un tour à Old Navy, plusieurs Starbucks, un achat d’une valeur de 40 dollars sur Amazon, mais aucune trace d’un restaurant, d’un cinéma ou d’une tout autre activité sociale. Par ailleurs, je trouvai également un magazine culinaire, donc j’imagine qu’elle aimait bien la cuisine. 
Il est plus difficile d’entrer par effraction dans un appartement que dans un pavillon de banlieue, parce qu’il y a moins de portes et de fenêtres. À chaque fois que je récupérais le courrier de Linda, je vérifiais la porte d’entrée et les fenêtres de derrière, mais elles étaient toutes verrouillées. C’était un peu frustrant parce que j’avais vraiment envie d’entrer chez elle. Finalement, j’ai fini par convenir d’un plan qui, quelle qu’en soit l’issue, devrait être amusant. 
Samedi dernier, je visitai l’immeuble où habitait Linda Watson comme j’avais l’habitude de le faire chaque week-end. À la différence près que cette fois-ci, je voulais qu’elle soit chez elle. Je pensais qu’il serait intéressant d’avoir une discussion avec elle.  Avec de la chance, je pourrais en profiter pour déverrouiller discrètement une fenêtre depuis l’intérieur. J’allai me placer devant sa porte d’entrée et toquai, peu couverte pour la saison avec mon t-shirt. La montée d’adrénaline était incroyable, je crus que j’allais tout faire foirer. 
La porte s’ouvrit, et devant moi apparut Linda Watson, identique à mon souvenir que j’avais d’elle chez l’épicier. C’est à ce moment, celui où nos regards se croisèrent pour la première fois, que je compris qu’il y avait un risque. Celui que je m’attache à elle. Aussi égoïste que cela puisse paraitre, je ne pouvais pas tuer quelqu’un pour qui j’avais une quelconque forme d’attachement, même s’il s’agissait d’une femme de 33 ans se tenant dans l’embrasure d’une porte, me jetant un regard perplexe et m’adressant un timide « Bonjour. ».
Bras croisés à cause du froid, je saluai à mon tour Linda, timidement. Je lui expliquai que je promenais mon chien près du bois situé à quelques pas de la partie arrière de son appartement, et qu’il s’était enfui. Je le cherchais depuis une heure quand me vint l’idée que Linda l’avait peut-être aperçu errer. Bien entendu, Linda s’excusa avec bienveillance de cette situation et de ne pas avoir pu m’aider, mais précisa qu’elle serait attentive, désormais. J’affichai un visage abattu en retour, m’excusant à mon tour de l’avoir troublée. 
Finalement, tout se déroula comme je l’avais espéré. Linda me fit signe d’entrer pour que je puisse me réchauffer autour d’un café. Je fis mine d’hésiter avant d’accepter son offre, même si, à l’intérieur, j’avais une folle envie de m’accrocher à son cou pour la remercier d’être si coopérative. Et c’est ainsi que Linda Watson se retrouva avec une jeune fille de 19 ans à côté d’elle sur le canapé : qui sait s’il s’agissait d’un beau geste ou si elle n’avait rien de mieux à faire, les samedis, que de discuter avec une gamine quelconque dont elle venait de faire la connaissance (et qui, par hasard, souhaitait la tuer).
Linda apprit rapidement que je m’appelais Maria (ce n’est pas le cas) et que j’étais inscrite au collège communautaire local (c’est également faux). J’étais un peu stressée à l’idée qu’elle ne me pose trop de questions parce que je n’avais pas préparé beaucoup de réponses. Je parvins à orienter la conversation sur elle, et elle se montra particulièrement enjouée de parler. Je demandai ce qu’elle faisait, et elle me répondit qu’elle travaillait dans un cabinet d’expertise-comptable (rien de bien surprenant), qu’elle échangeait avec des clients extérieurs et qu’elle tenait des dossiers. Je lui racontai que j’étais angoissée à l’idée de grandir. Elle me conseilla de profiter de l’université et de me faire beaucoup d’amis parce qu’il y a moins d’opportunités une fois dans la vie active. 
Lorsque je lui demandai si elle était mariée ou quoi que ce soit, elle rigola. Je savais bien qu’elle ne l’était pas, mais je voulais en apprendre davantage sur sa vie amoureuse. Elle m’avoua qu’elle n’avait pas de petit copain actuellement (au moins, elle en avait eu, mais à quand cela remontait-il ?). Lorsque je lui demandai si elle voulait des enfants, elle me répondit qu’elle n’en voulait pas avant d’avoir un meilleur emploi. Cerise sur le gâteau, elle m’informa qu’il y avait des antécédents de maladies génétiques, comme l’arthrite et la dépression, dans sa famille et qu’elle avait peur de les transmettre à ses enfants. 
C’était marrant qu’elle mentionne cela, puisqu’au moment d’utiliser sa salle de bain, je remarquai une pile de médicaments sur ordonnance. Il s’agissait de duloxétine, un antidépresseur, mais je ne le découvris que plus tard en effectuant des recherches. Je me fis la réflexion amusante qu’en la tuant, je lui ferais peut-être une faveur, mais je compris rapidement que seule une mauvaise personne pouvait avoir ce genre d’idées. 
Le reste de la visite fut insipide. Nous parlâmes de nourriture et d’autres sujets sans intérêt avant que je ne finisse par inventer une excuse pour partir. Je n’eus pas la chance de déverrouiller une fenêtre ou autre chose dans le genre, mais je n’avais plus besoin d’aller chez elle. À peine m’apprêtais-je à rentrer à la résidence universitaire que je pensais déjà au meilleur moyen de tuer Linda Watson. 

Il y avait deux chemins possibles : celui de l’efficacité et celui de l’amusement. J’optai pour le second car il serait bien plus satisfaisant de la disséquer lorsque je la tuerai, plutôt que de remplir ma mission et d’aller me coucher. Mais avançons d’une semaine, jusqu’au 13 décembre. Aujourd’hui, en fait. Linda Watson a fêté son 34ème anniversaire l’avant-veille. Je me suis fait le pari que si Linda fêtait son anniversaire seule, je lui paierais une visite et en profiterais pour la tuer. Le cas échéant, si elle avait de la compagnie ou si elle sortait en ville, j’attendrais une semaine ou plus avant de passer à l’acte. 
Ce matin-là, je me rendis à Lowe’s et achetai une hache. Encore une fois, j’imagine que vous êtes en train de rire, mais c’est aussi le but, voyez-vous. C’est tellement un cliché, un « truc de films », qu’elle me semblait être l’arme la plus amusante. La brandir et l’abattre sur quelqu’un… c’est une image vraiment divertissante. À vrai dire, le magasin avait différents modèles de hache, donc j’en pris une assez robuste mais suffisamment légère pour que je puisse m’en servir aisément.  
C’est après avoir récupéré la hache que l’adrénaline monta réellement. Il n’y avait qu’une seule chose que j’avais en tête à ce moment-là, c’était « Waouh, je vais vraiment passer à l’acte ». Mais ce n’était pas en mal, seulement une sorte de conscience du monde qui m’entoure, du monde réel. Je ressentis aussi ce tourbillon de souvenirs, de moments passés avec Linda. J’avais l’impression que ma vie défilait devant mes yeux, sauf qu’il ne s’agissait que d’une heure sans intérêt passée avec Linda. Je me souvenais de bribes de conversation, de son rire, de ses expressions faciales et d’autres choses.
Je me demandais aussi ce que les tueurs en série cinglés devaient ressentir dans un moment pareil. Délires schizophréniques ? Excitation sexuelle ? Je n’en ai aucune idée, mais pour ma part, je me sentais ridiculement alerte tout en ayant mes sens engourdis. Oui, c’est possible.
Avant de sortir de la voiture, j’eus la présence d’esprit de fourrer ma hache dans mon sac à dos afin d’avoir moins l’air ridicule en marchant du parking à l’immeuble. Le manche dépassait mais cela n’avait pas vraiment d’importance. À ce stade, mon cœur battait si fort que je pouvais sentir ma gorge palpiter. J’essayais de contrôler ma respiration, mais il est très dur de respirer lentement quand ton cœur martèle avec une telle intensité.   
Je m’approchai de la porte d’appartement de Linda Watson et collai silencieusement mon oreille contre sa surface après avoir posé mon sac au sol. J’entendis une voix différente de la sienne ; de la compagnie ? Non, ce n’était que le son de la télévision, mélangé à ses bruits de pas derrière la porte. Pour être honnête, je restai là, debout contre la porte, pendant un sacré long moment, parce que je voulais être certaine qu’il n’y avait absolument personne d’autre dans les environs. J’attendis et me rassurai pendant peut-être dix minutes avant de me convaincre de la suite. 
J’ouvris discrètement la fermeture éclair de mon sac à dos et tins la hache dans mes mains. Dans des mains qui tremblaient violemment. Pourquoi diable mon corps réagissait-il ainsi ? Je lui ordonnai de se ressaisir sur-le-champ, que ce n’était pas grand-chose. Bien sûr, il ne voulait pas m’écouter. C’était bizarre, en fait, de voir mes mains trembler, probablement dû à la montée d’adrénaline. Je levai les yeux au ciel et posai ma main sur la poignée de la porte. Si elle était verrouillée, je toquerais. Cela revenait au même pour ainsi dire. Je pris une profonde respiration et forçai mes muscles à agir. 
Je tournai rapidement la poignée. Elle n’était pas verrouillée. En une fraction de seconde, j’ouvris la porte et me glissai à l’intérieur. Linda Watson était à quelques pas de là, dans la cuisine, en train de cuisiner. Elle sursauta immédiatement et se tourna vers moi, étonnée. Je m’y attendais. Je lâchai rapidement la poignée de la porte et ajustai ma prise sur le manche de la hache. Au cours de la seconde qui suivit, je compris qu’elle allait probablement faire beaucoup trop de bruit. En y repensant, je suis bête de ne pas avoir pris en compte cette donnée. Au moment où la bouche de Linda s’ouvrait pour parler, pour émettre ne serait-ce qu’un son, j’abattis énergiquement ma hache contre sa tempe. 
Cependant, mon arme était à l’envers. Je l’attaquai avec la partie émoussée de la lame. J’avais volontairement agi de la sorte, parce qu’au cours de cette seconde décisive, je m’étais convaincue qu’il serait préférable qu’elle fasse le moins de bruit possible. Cela fonctionna plutôt bien, à vrai dire. Je ne sentis presque aucune résistance lorsque la hache percuta la tête de Linda dans un angle parfait. La syllabe qu’elle s’apprêtait à prononcer se transforma en une sorte d’étrange grognement, où plutôt devrais-je dire « en une expiration bruyante » pour être plus précise. Au même instant, l’impact propulsa sa tête contre le meuble de rangement, et elle s’affala, incapable de garder son équilibre. Je n’hésitai pas une seule seconde à l’assaillir de coups (cette fois-ci, avec la hache dans le bon sens) tandis qu’elle gisait sur le sol, à moitié allongée. Je ne savais pas vraiment où frapper, donc je me contentai de charcuter au niveau de sa clavicule et de sa poitrine. Je n’avais pas l’impression que la lame s’enfonçait profondément, mais j’entendais, à chaque fois que la hache s’abattait, un bruit sourd pour le moins plaisant. Il y avait même cette douce sensation à chaque fois que la lame s’enfonçait tendrement, comme si la hache était une sorte d’extension physique de mon toucher.  
Sur un coup de tête, je décidai une fois de viser sa gorge, mais je manquai largement ma cible. La hache heurta le sol par accident dans un bruit sourd et fort qui résonna dans tout l’appartement. Je n’avais pas le temps de m’en préoccuper. Je frappai à nouveau avec plus de précision et l’un de mes coups trouva la zone parfaite. Je sentis l’os, le cartilage, peu importe ce qu’il y a à l’intérieur. Il avait dû se fendre sous l’impact. Ensuite, je décidai de m’attaquer à son visage, et obtint cette incision oblique sur la bouche et le nez. Elle me fit un bien fou, alors j’en fis une deuxième. 
Je m’interrompis momentanément pour évaluer les dégâts.  Linda saignait abondamment et par à-coups, probablement synchronisés avec les battements de son cœur. Tout autour d’elle, une flaque s’était formée et le sang s’infiltrait et courait entre les carreaux du carrelage. Son t-shirt bleu clair était déchiré et taché de toutes part, et la chair se mêlait au reste au niveau de sa poitrine. La scène entière était rouge brillant. Son visage n’était pas mieux arrangé, dégoulinant de rouge à ce stade, et sa lèvre inférieure semblait sur le point de céder, révélant deux rangées de dents tachées de sang comme si elles appartenaient à un zombie ou un truc dans le genre. 
Cela dit, Linda n’était pas morte. Ses membres essayaient, faiblement et sans réel objectif, de bouger alors qu’elle était immobilisée sur le dos. Par-dessus tout, elle me rappelait un insecte que l’on écrase pitoyablement, mais qui continue de remuer ses pattes avant de mourir pour de bon. C’était ni plus ni moins ce qu’elle était en train de faire. Mais je n’avais aucune idée du temps que cela prendrait pour qu’elle meure, ou dans quel état elle se trouvait. Je finis par me saisir d’un gros couteau qui trainait sur le plan de travail et qui avait servi pour couper la viande quelques minutes plus tôt. En évitant de mettre les pieds dans la flaque de sang, je me penchai et découpai la partie supérieure du cou, de façon à la voir dans son ensemble, de gauche à droite. C’était un peu gênant parce la peau était vraiment tendre et juteuse tandis que je l’entaillais avec le couteau. Mais la sensation était vraiment différente de celle que j’avais eu avec la hache. En fait, j’avais la sensation de découper une large pièce de viande (ce qui était techniquement le cas, j’imagine).
Le sang commença à se déverser sur le sol, et j’espérai que j’avais tranché les principales artères. Ça devait être bon, parce qu’à un moment, les membres de Linda cessèrent de bouger, comme s’ils étaient vidés de leur énergie, et restèrent inertes sur le carrelage. Je pris quelques secondes pour reprendre mon souffle. Ce n’était pas le moment de rester dans le coin et de réfléchir à ce qui venait de se passer. Je remuai la lame du couteau dans une casserole sale qui trainait dans l’évier afin d’enlever le sang et le rangeai dans mon sac à dos. Je fis de même pour la hache. Je me saisis également de son ordinateur portable qui se trouvait sur le plan de travail et affichait une recette de veau aux champignons. Je n’ai pas vraiment pris l’ordinateur pour m’en servir, puisque j’en ai un en parfait état de marche pour l’université. Non, je voulais juste m’amuser en regardant ce qu’il contenait. 
Je sortis enfin dehors et fermai la porte derrière moi. J’avais du sang sur mon pull et mon jean mais, curieusement, j’avais anticipé le coup en choisissant de porter des couleurs foncées.
Sur le trajet du retour, je ne faisais que me remémorer en boucle de ce qui s’était passé. J’imagine que c’est toujours le cas aujourd’hui, en fait. Mais ce fut plutôt une bonne expérience. Linda Watson était morte. J’ai pris conscience de ce que cela représentait. La sensation d’avoir complètement effacé l’existence d’un individu. C’est dingue. Je ne sais pas comment le décrire.
Bref, j’ai jeté la hache et le couteau dans une des bennes à ordures du campus qui, je crois, est vidée tous les lundis, donc ils ne seront plus là bien assez tôt. Mes colocataires rentrent chez eux chaque week-end, donc j’ai la résidence à moi toute seule, aujourd’hui. Cela me donna l’opportunité de découvrir son historique Internet, là où se terrait ses plus grands secrets.
Il y avait en réalité beaucoup de trucs sales, comme des noms de sites hébergeant des vidéos pornographiques, des histoires érotiques et d’autres choses similaires. Pareil pour ses recherches. La plupart des pages sauvegardées étaient ennuyeuses : on pouvait y trouver, entre autres, des sites culinaires et des recettes, ainsi que des jeux comme Bejeweled. Je finis par atterrir sur son historique datant d’« il y a une semaine » et un frisson me parcourut l’échine.
Il était rempli de recherches telles que « méthodes de suicide », « comment faire un nœud coulant », « produits chimiques domestiques dangereux », « intoxication au dioxyde de carbone ». Il y en avait un paquet. Elle était probablement en mesure d’écrire un livre sur le suicide après tout ce qu’elle avait consulté. J’imagine donc que Linda envisageait le suicide. Je me demande si sa dépression l’avait influencée à ce sujet.
L’ironie est quand même frappante. Peut-être que Linda voulait mettre fin à ses jours, de toute façon. Ou, peut-être n’avait-elle pas le courage de le faire. Je lui ai presque littéralement offert un cadeau d’anniversaire en la tuant. C’est vraiment comique dans le genre « tordu » ; j’ai d’ailleurs un goût amer dans la bouche. Ce que je ne comprends pas, c’est que je ne vois pas les recherches plus récentes. Seules celles datant d’une semaine et plus sont visibles.
J’ai fini par jeter l’ordinateur portable dans la même benne à ordure. Cela fait quelques heures à présent, j’ai eu le temps de réfléchir calmement à tout ce qui s’est produit. Comme je l’ai précisé, c’était une expérience particulièrement plaisante et je suis contente d’en avoir fait le tour. Je sens que je peux enfin la rayer de ma liste des choses à faire avant de mourir, et que j’ai réglé certains détails avec moi-même. C’est probablement la dernière fois que je mentionne le nom de Linda Watson. Retour à la vie normale, à la vie d’étudiante, à l’exception près qu’il est possible que je continue d’observer les gens ici et là, parce que c’est absolument intéressant et amusant. 
Mais je me demanderai toujours combien de personnes sont comme moi. Je suis certaine qu’il en existe beaucoup, parce que cela n’a rien d’étrange selon moi. Je veux dire, de savoir ce que ça fait de tuer quelqu’un. Hélas, c’est un sujet que les gens n’abordent pas, donc je pense que je ne saurai jamais. Mais je suis sûre que les gens mentiraient si on leur posait la question. Cependant, vous ne pouvez pas vous empêcher de vous demander si cette personne, chez l’épicier, qui vous regarde attentivement alors que vous faites vos courses, considère éventuellement de vous tuer pour savoir ce que cela procure comme effet. Si je le pouvais, je leur ferais part de toute l’histoire, afin qu’elles décident par elles-mêmes. Mais qui sait, peut-être que cette personne n’est autre que vous. En fait, je l’espère de tout cœur.
~♥

 